1.
/**
 * @param {number[]} arr
 * @param {Function} fn
 * @return {number[]}
 */
    var map = function(arr, fn) {

        returnedArray = []

        for (let i =0; i<arr.length; i++){

            returnedArray[i] = fn(arr[i], i)

        }

        return returnedArray

    };

  2. 
/**
 * @param {number[]} nums
 * @param {Function} fn
 * @param {number} init
 * @return {number}
 */
var reduce = function(nums, fn, init) {
    let accum=init;
     for(const index in nums){
      accum = fn(accum, nums[index])
    }
    return accum;
};

3.
/**
 * @param {number[]} nums
 * @param {Function} fn
 * @param {number} init
 * @return {number}
 */
var reduce = function(nums, fn, init) {
    let accum=init;
     for(const index in nums){
      accum = fn(accum, nums[index])
    }
    return accum;
};

